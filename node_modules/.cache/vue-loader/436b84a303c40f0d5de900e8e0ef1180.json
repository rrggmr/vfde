{"remainingRequest":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/src/components/login/LoginForm.vue?vue&type=style&index=0&id=663841b2&scoped=true&lang=css&","dependencies":[{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/src/components/login/LoginForm.vue","mtime":1639653885453},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/css-loader/dist/cjs.js","mtime":1639655079448},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1639655080628},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/postcss-loader/src/index.js","mtime":1639655080450},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/cache-loader/dist/cjs.js","mtime":1639655034192},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/vue-loader/lib/index.js","mtime":1639655080628}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVycm9yIHsKICBmb250LXdlaWdodDogYm9sZDsKfQo="},{"version":3,"sources":["LoginForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA","file":"LoginForm.vue","sourceRoot":"src/components/login","sourcesContent":["<template>\n  <div class=\"grid splash-screen\">\n      <div class=\"form_holder\">\n        <h2>{{$t('Melden Sie sich f√ºr den Zugriff an')}}</h2>\n        <b-form @submit.prevent=\"submitForm\">\n          <b-form-group\n              id=\"email-wrapper\"\n              :label=\"$t('Nutzername')\"\n              label-for=\"email-field\"\n          >\n            <b-form-input\n                id=\"email-field\"\n                v-model=\"form.email\"\n                type=\"text\"\n                required\n                class=\"email_icon\"\n            ></b-form-input>\n            <p class=\"error\" v-if=\"errors.username\">{{errors.username}}</p>\n          </b-form-group>\n          <b-form-group\n              id=\"password-wrapper\"\n              :label=\"$t('Passwort')\"\n              label-for=\"password-field\"\n          >\n            <b-form-input\n                id=\"password-field\"\n                v-model=\"form.password\"\n                type=\"password\"\n                required\n                class=\"password_icon\"\n            ></b-form-input>\n            <p class=\"error\" v-if=\"errors.password\">{{errors.password}}</p>\n          </b-form-group>\n          <b-button type=\"submit\" variant=\"danger\">{{ $t('Einloggen') }}</b-button>\n        </b-form>\n        <LocaleSelect />\n<!--        <b-button variant=\"outline-light\" class=\"additional_buttons\">Register</b-button>-->\n<!--        <b-button variant=\"outline-light\" class=\"additional_buttons\">Forgotten password?</b-button>-->\n      </div>\n    <div class=\"logo\"></div>\n  </div>\n</template>\n\n<script>\nimport { router } from \"@/router/router\";\nimport store from \"@/store/store\";\nimport LocaleSelect from \"@/components/localisation/LocaleSelect\";\nexport default {\n  name: \"LoginForm\",\n  components: {LocaleSelect},\n  data() {\n    return {\n      form: {\n        email: '',\n        password: '',\n        rememberMe: false\n      },\n      errors: {\n        username: null,\n        password: null\n      }\n    }\n  },\n  methods: {\n    submitForm: async function() {\n      // Temporary fake login to have a small amount of gating until login api is available\n     if (this.form.email === 'demo' && this.form.password === 'gatekeeper' ) {\n       store.commit('authenticate');\n       await router.push('/'); // TODO: Redirect to where ever they were trying to get to.\n     } else {\n       this.errors = {\n         'username': 'Incorrect username',\n         'password': 'Incorrect password'\n       }\n     }\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .error {\n    font-weight: bold;\n  }\n</style>"]}]}