{"remainingRequest":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/src/components/dashboard/config/ConfigRouter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/src/components/dashboard/config/ConfigRouter.vue","mtime":1639653885442},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/cache-loader/dist/cjs.js","mtime":1639655034192},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/babel-loader/lib/index.js","mtime":1639655034093},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/cache-loader/dist/cjs.js","mtime":1639655034192},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/vue-loader/lib/index.js","mtime":1639655080628}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCByb3V0ZXMgZnJvbSAiQC9yb3V0ZXIvcm91dGVzL2NvbmZpZyI7CmltcG9ydCBTaWRlYmFyIGZyb20gIkAvY29tcG9uZW50cy9kYXNoYm9hcmQvU2lkZWJhciI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkNvbmZpZ1JvdXRlciIsCiAgY29tcG9uZW50czoge1NpZGViYXJ9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByb3V0ZXM6IHJvdXRlc1swXS5jaGlsZHJlbiwKICAgICAgdGFiOiAxLAogICAgICBzaWRlYmFyQ29udGFpbmVyVmlzaWJsZTogZmFsc2UsCiAgICAgIHNpZGViYXJzOiBbXSwKICAgICAgdGFiU2V0OiBmYWxzZQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuc2V0SW5pdGlhbFRhYigpCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRTaWRlYmFycyhzaWRlYmFycykgewogICAgICB0aGlzLnNpZGViYXJzID0gc2lkZWJhcnMKICAgIH0sCiAgICBzZXRJbml0aWFsVGFiKCkgewogICAgICAvLyBOZWVkcyBhIGJsYW5rIHRpbWVvdXQgb3IgaXQgZ2xpdGNoZXMgYmFjayB0byB0aGUgaW5pdGlhbCB2YWx1ZSBvZiAwLgogICAgICAvLyBUT0RPOiBNaWdodCBiZSBhYmxlIHRvIHJlcGxhY2UgdGhpcyB3aXRoIGEgcHJvbWlzZT8KICAgICAgY29uc3QgY29tcG9uZW50ID0gdGhpcwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7CiAgICAgICAgY29tcG9uZW50LnRhYj1jb21wb25lbnQuZ2V0QWN0aXZlVGFiKCkKICAgICAgICBjb21wb25lbnQudGFiU2V0ID0gdHJ1ZQogICAgICB9LCAwKTsKICAgIH0sCiAgICBnZXRBY3RpdmVUYWIoKSB7CiAgICAgIGNvbnN0IGFjdGl2ZVRhYk5hbWUgPSB0aGlzLiRyb3V0ZS5wYXRoLnNwbGl0KCcvJylbMl0KICAgICAgZm9yIChsZXQgaT0wOyBpPHRoaXMucm91dGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgY29uc3Qgcm91dGVQYXRoID0gdGhpcy5yb3V0ZXNbaV0ucGF0aC5yZXBsYWNlKCcvJywnJykucmVwbGFjZSgvXCovZywgJycpCiAgICAgICAgY29uc3QgbWF0Y2ggPSBhY3RpdmVUYWJOYW1lID09PSByb3V0ZVBhdGgKICAgICAgICBpZihtYXRjaCkgewogICAgICAgICAgcmV0dXJuIGkKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIDAKICAgIH0sCiAgICB0b2dnbGVTaWRlYmFyKGRhdGEpIHsKICAgICAgdGhpcy5zaWRlYmFyVHlwZSA9IGRhdGEudHlwZQogICAgICB0aGlzLnNpZGViYXJXaWR0aCA9IGRhdGEud2lkdGgKICAgICAgdGhpcy5zaWRlYmFyQ29udGFpbmVyVmlzaWJsZSA9ICF0aGlzLnNpZGViYXJDb250YWluZXJWaXNpYmxlCiAgICAgIGlmICghdGhpcy5zaWRlYmFyQ29udGFpbmVyVmlzaWJsZSkgewogICAgICAgIHRoaXMuYmFja1RvQmFzZVVybCgpCiAgICAgIH0KICAgIH0sCiAgICBiYWNrVG9CYXNlVXJsKCkgewogICAgICBjb25zdCBjdXJyZW50UGF0aCA9IHRoaXMuJHJvdXRlLnBhdGgKICAgICAgY29uc3QgcGF0aEVsZW1lbnRzID0gY3VycmVudFBhdGguc3BsaXQoJy8nKQogICAgICBjb25zdCBlZGl0b3JQb3NpdGlvbiA9IHBhdGhFbGVtZW50cy5pbmRleE9mKCdlZGl0b3InKQogICAgICBjb25zdCBzbGljZSA9IHBhdGhFbGVtZW50cy5zbGljZSgwLCBlZGl0b3JQb3NpdGlvbikKICAgICAgY29uc3QgbmV3UGF0aCA9IHNsaWNlLmpvaW4oJy8nKSArICcvJwogICAgICB0aGlzLiRyb3V0ZXIucHVzaChuZXdQYXRoKQogICAgfSwKICB9LAogIHdhdGNoOiB7CiAgICB0YWIoKSB7CiAgICAgIGNvbnN0IG9sZFBhdGggPSB0aGlzLiRyb3V0ZS5wYXRoCiAgICAgIGxldCBuZXdQYXRoID0gJy9jb25maWcvJyArIHRoaXMucm91dGVzW3RoaXMudGFiXS5wYXRoLnJlcGxhY2UoL1wqL2csICcnKSArICcvJwogICAgICBuZXdQYXRoID0gbmV3UGF0aC5yZXBsYWNlKCcvLycsICcvJykKICAgICAgY29uc3QgY2hpbGRyZW4gPSBvbGRQYXRoLnJlcGxhY2UobmV3UGF0aCwgJycpCiAgICAgIGlmIChuZXdQYXRoICE9PSBvbGRQYXRoICYmIG5ld1BhdGggKyBjaGlsZHJlbiAhPT0gb2xkUGF0aCkgewogICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaChuZXdQYXRoKQogICAgICB9CiAgICB9LAogICAgJHJvdXRlKCkgewogICAgICB0aGlzLnRhYiA9IHRoaXMuZ2V0QWN0aXZlVGFiKCkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["ConfigRouter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ConfigRouter.vue","sourceRoot":"src/components/dashboard/config","sourcesContent":["<template>\n  <div>\n    <b-tabs v-model=\"tab\" v-if=\"tabSet\">\n      <b-tab\n          v-for=\"(route) in routes\"\n          :key=\"route.name\"\n          :title=\"$t(route.name)\"\n      >\n      </b-tab>\n      <b-card>\n        <router-view @showSidebar=\"toggleSidebar\" @passSidebars=\"getSidebars\" />\n      </b-card>\n    </b-tabs>\n    <div id=\"sidebarContainer\" v-if=\"sidebarContainerVisible\" >\n      <Sidebar\n          v-for=\"sidebar in sidebars\"\n          :key=\"`sidebar_${sidebar.id}`\"\n          :sidebar-type=\"sidebar.type\"\n          :sidebar-width=\"sidebar.width\"\n          :sidebar-content=\"sidebar.content\"\n          @closeSidebar=\"toggleSidebar\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport routes from \"@/router/routes/config\";\nimport Sidebar from \"@/components/dashboard/Sidebar\";\n\nexport default {\n  name: \"ConfigRouter\",\n  components: {Sidebar},\n  data() {\n    return {\n      routes: routes[0].children,\n      tab: 1,\n      sidebarContainerVisible: false,\n      sidebars: [],\n      tabSet: false\n    }\n  },\n  mounted() {\n    this.setInitialTab()\n  },\n  methods: {\n    getSidebars(sidebars) {\n      this.sidebars = sidebars\n    },\n    setInitialTab() {\n      // Needs a blank timeout or it glitches back to the initial value of 0.\n      // TODO: Might be able to replace this with a promise?\n      const component = this\n      setTimeout(function(){\n        component.tab=component.getActiveTab()\n        component.tabSet = true\n      }, 0);\n    },\n    getActiveTab() {\n      const activeTabName = this.$route.path.split('/')[2]\n      for (let i=0; i<this.routes.length; i++) {\n        const routePath = this.routes[i].path.replace('/','').replace(/\\*/g, '')\n        const match = activeTabName === routePath\n        if(match) {\n          return i\n        }\n      }\n      return 0\n    },\n    toggleSidebar(data) {\n      this.sidebarType = data.type\n      this.sidebarWidth = data.width\n      this.sidebarContainerVisible = !this.sidebarContainerVisible\n      if (!this.sidebarContainerVisible) {\n        this.backToBaseUrl()\n      }\n    },\n    backToBaseUrl() {\n      const currentPath = this.$route.path\n      const pathElements = currentPath.split('/')\n      const editorPosition = pathElements.indexOf('editor')\n      const slice = pathElements.slice(0, editorPosition)\n      const newPath = slice.join('/') + '/'\n      this.$router.push(newPath)\n    },\n  },\n  watch: {\n    tab() {\n      const oldPath = this.$route.path\n      let newPath = '/config/' + this.routes[this.tab].path.replace(/\\*/g, '') + '/'\n      newPath = newPath.replace('//', '/')\n      const children = oldPath.replace(newPath, '')\n      if (newPath !== oldPath && newPath + children !== oldPath) {\n         this.$router.push(newPath)\n      }\n    },\n    $route() {\n      this.tab = this.getActiveTab()\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}