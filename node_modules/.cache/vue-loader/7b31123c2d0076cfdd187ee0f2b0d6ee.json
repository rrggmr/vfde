{"remainingRequest":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/src/components/dashboard/config/data_sources/DatasourceActions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/src/components/dashboard/config/data_sources/DatasourceActions.vue","mtime":1639653885445},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/cache-loader/dist/cjs.js","mtime":1639655034192},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/babel-loader/lib/index.js","mtime":1639655034093},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/cache-loader/dist/cjs.js","mtime":1639655034192},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/vue-loader/lib/index.js","mtime":1639655080628}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgQ29tbW9uTWV0aG9kcyBmcm9tICJAL21peGlucy9jb21tb25NZXRob2RzIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRGFzaGJvYXJkQWN0aW9ucyIsCiAgbWl4aW5zOiBbCiAgICBDb21tb25NZXRob2RzCiAgXSwKICBtZXRob2RzOiB7CiAgICBwbGFjZWhvbGRlcjogKCkgPT4gewogICAgICBjb25zb2xlLmxvZygnUGxhY2Vob2xkZXIgb25seScpCiAgICB9LAogICAgYWN0aW9uc0NsYXNzKCkgewogICAgICBpZiAodGhpcy5zaW5nbGUpIHsKICAgICAgICByZXR1cm4gJycKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gJ2J1bGsgJwogICAgICB9CiAgICB9CiAgfSwKICBwcm9wczogewogICAgc2luZ2xlOiBCb29sZWFuLAogICAgaWQ6IFN0cmluZwogIH0KfQo="},{"version":3,"sources":["DatasourceActions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DatasourceActions.vue","sourceRoot":"src/components/dashboard/config/data_sources","sourcesContent":["<template>\n  <div>\n    <ul :class=\"`${actionsClass()}actions`\">\n      <li @click=\"placeholder\" v-if=\"single\">\n        <router-link :to=\"`/config/data-sources/editor/${id}`\">\n          <font-awesome-icon icon=\"edit\" />\n        </router-link>\n      </li>\n      <li  v-if=\"!single\">\n        <router-link :to=\"'/config/data-sources/editor'\">\n          {{ $t('New datasource') }}\n          <font-awesome-icon icon=\"file-medical\" />\n        </router-link>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n\nimport CommonMethods from \"@/mixins/commonMethods\";\n\nexport default {\n  name: \"DashboardActions\",\n  mixins: [\n    CommonMethods\n  ],\n  methods: {\n    placeholder: () => {\n      console.log('Placeholder only')\n    },\n    actionsClass() {\n      if (this.single) {\n        return ''\n      } else {\n        return 'bulk '\n      }\n    }\n  },\n  props: {\n    single: Boolean,\n    id: String\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n  svg {\n    font-size: 1.25em;\n    margin-left:.25em;\n    color: #6c6c6c;\n    &:hover {\n      color: #000;\n    }\n  }\n  .actions {\n    a {\n      text-decoration: none;\n      color: inherit;\n      font-weight: bold;\n      &:hover {\n        color: inherit;\n      }\n    }\n    &.bulk {\n      position: absolute;\n      right:1em;\n      margin-top: -3.5em;\n      span {\n        font-weight: bold;\n        margin-right:1em;\n      }\n    }\n    margin:0;\n    padding: 0;\n    text-align: center;\n    li {\n      display: inline-block;\n      margin:0 .5em 0 0;\n      cursor: pointer;\n      &.singleLinetrue {\n        display: block;\n        margin: 1em 0;\n        button {\n          width: 100%;\n        }\n      }\n    }\n    button {\n      border-radius: 0;\n    }\n  }\n</style>\n"]}]}