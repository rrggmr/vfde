{"remainingRequest":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/src/components/dashboard/data/alerts/AlertsList.vue?vue&type=style&index=0&id=1ce5c3b3&scoped=true&lang=scss&","dependencies":[{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/src/components/dashboard/data/alerts/AlertsList.vue","mtime":1639653885448},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/css-loader/dist/cjs.js","mtime":1639655079448},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1639655080628},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/postcss-loader/src/index.js","mtime":1639655080450},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/sass-loader/dist/cjs.js","mtime":1639655031546},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/cache-loader/dist/cjs.js","mtime":1639655034192},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/vue-loader/lib/index.js","mtime":1639655080628}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojdGFibGUtd3JhcHBlciB7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICB0YWJsZSB7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgdGggewogICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsKICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICAgICAgJi5hY3Rpb25zIHsKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgIH0KICAgIH0KICAgIHRkIHsKICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICAgICAgJi5hY3Rpb25zIHsKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgLmV4cGFuZCB7CiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgICAgICBjb2xvcjogcmdiKDEwOCwxMDgsMTA4KTsKICAgICAgICAgICY6aG92ZXIgewogICAgICAgICAgICBjb2xvcjogIzAwMDsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KICAgIC5oaWRkZW4tY29sdW1uIHsKICAgICAgZGlzcGxheTogbm9uZTsKICAgIH0KICB9Cn0KCg=="},{"version":3,"sources":["AlertsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AlertsList.vue","sourceRoot":"src/components/dashboard/data/alerts","sourcesContent":["<template>\n  <div id=\"table-wrapper\" >\n    <AlertActions\n        multiple\n        :grouped=\"grouped\"\n        @updateGrouped=\"updateGrouped\"\n    />\n    <table class=\"table\" id=\"alertsTable\" >\n      <thead>\n        <tr>\n          <th class=\"centered\"><b-check /></th>\n          <th v-if=\"grouped\">{{$t('Anzahl')}}</th>\n          <th>{{$t('Alarmtyp')}}</th>\n          <th>{{$t('Alarminformationen')}}</th>\n          <th class=\"actions\">{{$t('Aktionen')}}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <Alert\n            v-for=\"id in alertIds\"\n            :key=\"`alert_${id}`\"\n            :alert=\"alerts[id]\"\n            :grouped=\"grouped\"\n            @showSidebar=\"showSidebar\"\n        />\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport {fakeData} from \"@/config\";\nimport commonMethods from \"@/mixins/commonMethods\";\nimport sidebarMethods from \"@/mixins/sidebarMethods\";\nimport Alert from \"@/components/dashboard/data/alerts/Alert\";\nimport AlertActions from \"@/components/dashboard/data/alerts/AlertActions\";\nexport default {\n  name: \"DataSourceList\",\n  components: {AlertActions, Alert},\n  mixins: [\n    commonMethods,\n    sidebarMethods\n  ],\n  data() {\n    return {\n      alerts: null,\n      alertIds: [],\n      fields: [],\n      abbreviateAfterColumn: 0,\n      resizeTimer: null,\n      sidebars: [],\n      grouped: null\n    }\n  },\n  methods: {\n    showSidebar(id, alert, push = true) {\n      this.sidebars = []\n      const sidebar = {\n        id: id,\n        content: alert,\n        type: 'alertSidebar',\n        width: 25\n      }\n      this.sidebars.push(sidebar)\n      this.$emit('passSidebars', this.sidebars)\n      let alertGrouped\n      if (this.grouped) {\n         alertGrouped = 'grouped'\n      } else {\n         alertGrouped = 'all'\n      }\n      if (push) {\n        this.$router.push(`/data/alerts/${alertGrouped}/view/${id}`)\n      }\n    },\n    checkForEditor() {\n      const pathElements = this.$route.path.split('/')\n      if(pathElements.includes('view')) {\n        let id = this.lastElementOfPath()\n        if (id==='view') {\n          this.sidebars = []\n          const redirect = pathElements.slice(0, pathElements.length-2).join('/') + '/'\n          this.$router.replace(redirect)\n        } else {\n          if (this.sidebars.length === 0) {\n            this.showSidebar(id, this.getNthObjectElement(this.alerts, 0), false)\n          }\n          const data = {\n            'type': 'alertSidebar',\n            'id': id,\n            'width': 25\n          }\n          this.stopMainScroll()\n          this.$emit('showSidebar', data)\n        }\n      } else {\n        this.restoreMainScroll()\n      }\n    },\n    updateGrouped(grouped) {\n      const lastElement = this.lastElementOfPath()\n      if (['all', 'grouped', 'alerts'].includes(lastElement)) {\n        this.grouped = grouped\n        if (this.grouped) {\n          this.$router.push('/data/alerts/grouped/')\n        } else {\n          this.$router.push('/data/alerts/all/')\n        }\n      } else if (this.$route.path.split('/').includes('grouped')) {\n        this.grouped = true\n      }\n    },\n    resolveUrl() {\n      if (this.lastElementOfPath() === 'alerts') {\n        this.$router.push('grouped')\n      }\n      this.grouped = this.lastElementOfPath() === 'grouped'\n    },\n    pageSetup() {\n      this.resolveUrl()\n      const component = this\n      let setUpData = new Promise(function(resolve, reject) {\n        component.alerts = fakeData.alerts\n        component.alertIds = Object.keys(component.alerts)\n        component.fields = Object.keys(component.alerts[Object.keys(component.alerts)[0]])\n        if (typeof component.alerts === 'object') {\n          resolve();\n        } else {\n          reject(`There was an error in getting the data. alerts was set as ${typeof component.alerts}`);\n        }\n      })\n      setUpData.then(\n        function() {\n          component.checkForEditor()\n        },\n        function(error) {\n          console.log(error)\n        }\n      )\n    }\n  },\n  mounted() {\n    this.pageSetup()\n  },\n  watch: {\n    $route() {\n      this.resolveUrl()\n      this.checkForEditor()\n    }\n  },\n}\n\n</script>\n\n<style scoped lang=\"scss\">\n#table-wrapper {\n  overflow: hidden;\n  table {\n    text-align: left;\n    th {\n      text-transform: capitalize;\n      white-space: nowrap;\n      &.actions {\n        text-align: center;\n      }\n    }\n    td {\n      white-space: nowrap;\n      &.actions {\n        text-align: center;\n        .expand {\n          cursor: pointer;\n          color: rgb(108,108,108);\n          &:hover {\n            color: #000;\n          }\n        }\n      }\n    }\n    .hidden-column {\n      display: none;\n    }\n  }\n}\n\n</style>\n"]}]}