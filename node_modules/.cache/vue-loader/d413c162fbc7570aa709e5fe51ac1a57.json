{"remainingRequest":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/src/components/dashboard/config/data_sources/DataSourceList.vue?vue&type=style&index=0&id=2c171866&scoped=true&lang=css&","dependencies":[{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/src/components/dashboard/config/data_sources/DataSourceList.vue","mtime":1639653885445},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/css-loader/dist/cjs.js","mtime":1639655079448},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1639655080628},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/postcss-loader/src/index.js","mtime":1639655080450},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/cache-loader/dist/cjs.js","mtime":1639655034192},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/vue-loader/lib/index.js","mtime":1639655080628}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCnRhYmxlIHsKICB0ZXh0LWFsaWduOiBsZWZ0Owp9Cg=="},{"version":3,"sources":["DataSourceList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA","file":"DataSourceList.vue","sourceRoot":"src/components/dashboard/config/data_sources","sourcesContent":["<template>\n  <div>\n    <DashboardActions />\n    <table class=\"table\" >\n      <thead>\n        <th>{{ $t(\"Name\") }}</th>\n        <th >Type</th>\n        <th class=\"hide-on-mobile\">Streaming</th>\n        <th class=\"hide-on-mobile\">{{ $t(\"erstellt\") }}</th>\n        <th class=\"hide-on-mobile\">{{ $t(\"ge√§ndert\") }}</th>\n        <th>{{ $t(\"Aktionen\") }}</th>\n      </thead>\n      <tbody>\n        <tr v-for=\"datasource in datasources\" :key=\"datasource.id\">\n          <td>{{datasource.name}}</td>\n          <td>{{$t(datasource.editorConfig.type)}}</td>\n          <td class=\"hide-on-mobile\">{{$t(datasource.editorConfig.streaming)}}</td>\n          <td class=\"hide-on-mobile\">{{localiseDate(datasource.created)}}</td>\n          <td class=\"hide-on-mobile\">{{localiseDate(datasource.modified)}}</td>\n          <td class=\"actions\"><DashboardActions single :id=\"datasource.editorConfig.id.value\" /></td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport {fakeData} from \"@/config\";\nimport DashboardActions from \"@/components/dashboard/config/data_sources/DatasourceActions\";\nimport commonMethods from \"@/mixins/commonMethods\";\nimport sidebarMethods from \"@/mixins/sidebarMethods\";\nexport default {\n  name: \"DataSourceList\",\n  components: {DashboardActions},\n  mixins: [\n    commonMethods,\n    sidebarMethods\n  ],\n  data() {\n    return {\n      datasources: null\n    }\n  },\n  methods: {\n    checkForEditor() {\n      const pathElements = this.$route.path.split('/')\n      if(pathElements.includes('editor')) {\n        let id = pathElements[pathElements.length-1]\n        if (id === 'editor') {id = null}\n        const data = {\n          'type': 'datasourceEditor',\n          'id': id,\n          'width': 50\n        }\n        this.sidebars = [data]\n        this.stopMainScroll()\n        this.$emit('passSidebars', this.sidebars)\n        this.$emit('showSidebar', data)\n      } else {\n        this.restoreMainScroll()\n      }\n    }\n  },\n  mounted() {\n    this.datasources = fakeData.dataSources\n    this.checkForEditor()\n  },\n  watch: {\n    $route() {\n      this.checkForEditor()\n    }\n  }\n}\n</script>\n\n<style scoped>\ntable {\n  text-align: left;\n}\n</style>\n"]}]}