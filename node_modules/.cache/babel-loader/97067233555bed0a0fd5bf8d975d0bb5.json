{"remainingRequest":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/babel-loader/lib/index.js!/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/eslint-loader/index.js??ref--13-0!/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/src/config.js","dependencies":[{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/src/config.js","mtime":1639656310352},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/cache-loader/dist/cjs.js","mtime":1639655034192},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/babel-loader/lib/index.js","mtime":1639655034093},{"path":"/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/node_modules/eslint-loader/index.js","mtime":1639655073620}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/sorens/Documents/GitHub/vfde-inv-var-ui-demo/src/config.js"],"names":["cmOptions","lineNumbers","theme","tabSize","indentWithTabs","readOnly","mode","autoRefresh","scrollbarStyle","conf","python","tab","lineBreak","newLine","sparkFields","datasourceTypes","name","options","pythonEditorOptions","debounce","default","getEnv","window","configs","process","env","faker","require","locale","fakeDatasources","amount","datasources","i","datasource","company","companyName","editorConfig","id","value","datatype","uuid","freeText","type","streaming","fields","fieldType","nullable","key","advanced","pythonCode","created","date","recent","modified","push","getRandomInt","max","Math","floor","random","fakeText","number","myText","bs","capitalizeFirstLetter","fakeLog","randomInt","possible_actions","x","fakeAction","action","text","dateTime","past","string","charAt","toUpperCase","slice","fakeLogs","logs","sort","b","a","Date","fakeProducts","products","product","commerce","productName","price","productMaterial","productDescription","float","lorem","word","sentence","fakeAlerts","alerts","alert","fakeAlert","alertData","fakeCount","min","fakeDate","between","count","icon","expected","actual","fakeData","dataSources"],"mappings":"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","sourcesContent":["const cmOptions = {\n    lineNumbers: false,\n    theme: 'material-palenight',\n    tabSize: 4,\n    indentWithTabs: false,\n    readOnly: true,\n    mode: 'javascript',\n    autoRefresh: true,\n    scrollbarStyle: 'simple'\n}\n\n\nconst conf = {\n    python: {\n      tab: '    ',\n      lineBreak: ' \\\\\\n',\n      newLine: '\\n\\n'\n    },\n    sparkFields: [\n        'ByteType',\n        'ShortType',\n        'IntegerType',\n        'LongType',\n        'FloatType',\n        'DoubleType',\n        'DecimalType',\n        'StringType',\n        'BinaryType',\n        'BooleanType',\n        'TimestampType',\n        'DateType',\n        // 'ArrayType',\n        // 'MapType',\n        // 'StructType',\n        // 'StructField'\n    ],\n    datasourceTypes: [\n      {\n          name: 'csv',\n          options: [\n              'path',\n              'header',\n              'enforceSchema',\n              'escape',\n              'sep',\n              'quote',\n              'encoding',\n              'nullValue',\n              'compression'\n          ]\n      },\n      {\n          name: 'json',\n          options: [\n              'path'\n          ]\n      }\n    ],\n    cmOptions: cmOptions,\n    pythonEditorOptions: {\n        ...cmOptions,\n        lineNumbers: true,\n        readOnly: false,\n        mode: 'python',\n    },\n    debounce: {\n        default: 500\n    },\n}\n\nexport function getEnv(name) {\n    return window?.configs?.[name] || process.env[name]\n}\n\nexport default conf\n\n// Dummy data only - actual data will have real UUIDs, these ones are fake and not suitable.\n\nconst faker = require('faker')\nfaker.locale = \"en\";\n\nfunction fakeDatasources(amount=1) {\n    const datasources = []\n    for (let i=0; i<amount; i ++) {\n        const datasource = {\n            name: faker.company.companyName(),\n            editorConfig: {\n                id: {\n                    value: faker.datatype.uuid(),\n                    freeText: true\n                },\n                type: \"csv\",\n                streaming: true,\n                fields: [\n                    {\n                        fieldType: \"StringType\",\n                        name: \"Foo\",\n                        nullable: false\n                    },\n                    {\n                        fieldType: \"DecimalType\",\n                        name: \"Bar\",\n                        nullable: true\n                    }\n                ],\n                options: [\n                    {\n                        key: \"path\",\n                        value: \"https://s3.amazonaws.com/example-bucket/path/to/object\",\n                        freeText: false\n                    },\n                    {\n                        key: \"compression\",\n                        value: \"gzip\",\n                        freeText: false\n                    },\n                    {\n                        key: \"foo\",\n                        value: \"bar\",\n                        freeText: true\n                    }\n                ],\n                advanced: false\n            },\n            pythonCode: \"schema = StructType([\\n    StructField(\\\"Foo\\\", StringType(), false),\\n    StructField(\\\"Bar\\\", DecimalType(), false),\\n])\\n\\ndf = spark.readStream \\\\\\n    .format(\\\"csv\\\") \\\\\\n    .option(\\\"path\\\", \\\"https://s3.amazonaws.com/example-bucket/path/to/object\\\") \\\\\\n    .option(\\\"compression\\\", \\\"gzip\\\") \\\\\\n    .schema(schema) \\\\\\n    .load()\\n\\ndf.createOrReplaceTempView(\\\"example-datasource\\\")\",\n            created: faker.date.recent(),\n            modified: faker.date.recent(),\n        }\n        datasources.push(datasource)\n    }\n    return datasources\n}\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\n\nfunction fakeText(number) {\n    let myText = \"\"\n    for (let i = 0; i<number; i++) {\n        myText += faker.company.bs()\n        if (i == number-1) {\n            myText += \".\"\n        } else {\n            myText += \" \"\n        }\n    }\n    return capitalizeFirstLetter(myText )\n}\n\nfunction fakeLog() {\n    const randomInt = getRandomInt(8)\n    const possible_actions = [\n        \"comment\",\n        \"resolution\",\n        \"update\",\n        \"resolution\",\n        \"update\",\n        \"resolution\",\n        \"update\",\n        \"update\"\n    ]\n    let x = 3\n    const fakeAction = possible_actions[randomInt]\n    if (fakeAction === \"comment\") {\n        x = 12\n    }\n\n    return {\n        id: faker.datatype.uuid(),\n        action: fakeAction,\n        text: fakeText(x),\n        dateTime: faker.date.past()\n    }\n}\n\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function fakeLogs(amount=1) {\n    const logs = []\n    for (let i=0; i<amount; i++) {\n        logs.push(fakeLog())\n    }\n    return logs.sort((b, a) => new Date(a.dateTime) - new Date(b.dateTime))\n}\n\nfunction fakeProducts(amount) {\n    const products = {}\n    for (let i=0; i<amount; i ++) {\n        const product = {\n            \"name\": faker.commerce.productName(),\n            \"price\": faker.commerce.price(),\n            \"material\": faker.commerce.productMaterial(),\n            \"description\": faker.commerce.productDescription(),\n            \"random number\": faker.datatype.float(),\n            \"another random number\": faker.datatype.float(),\n            \"random word\": faker.lorem.word(),\n            \"random sentence\": faker.lorem.sentence()\n        }\n        products[faker.datatype.uuid()] = product\n    }\n    return products\n}\n\nfunction fakeAlerts(amount) {\n    const alerts = {}\n    for (let i=0; i<amount; i ++) {\n        const alert = fakeAlert()\n        alerts[alert.uuid] = alert\n    }\n    return alerts\n}\n\nexport function fakeAlert() {\n    const randomInt = getRandomInt(3)\n    let alertData\n    const fakeCount = faker.datatype.number({min:500, max:20000})\n    const fakeDate = [\n        faker.date.between('2021-11-01', '2021-11-30'),\n        faker.date.between('2021-12-01', '2021-12-31'),\n    ]\n    switch (randomInt) {\n        case 0:\n              alertData = {\n                uuid: faker.datatype.uuid(),\n                type: 'falsche Rechnung',\n                date: fakeDate,\n                count: fakeCount,\n                icon: 'euro-sign',\n                expected: faker.datatype.float({\n                    'min': 1,\n                    'max': 5\n                }),\n                actual: faker.datatype.float(\n                    {\n                        'min': 1,\n                        'max': 5\n                    }\n                ),\n            }\n            return alertData\n\n        case 1:\n            alertData = {\n                uuid: faker.datatype.uuid(),\n                type: 'falsche Ware',\n                date: fakeDate,\n                count: fakeCount,\n                icon: 'box-open',\n                expected: `P${faker.datatype.number()}`,\n                actual: `P${faker.datatype.number()}`\n            }\n            return alertData\n\n        case 2:\n            alertData = {\n                uuid: faker.datatype.uuid(),\n                type: 'unbekannte Produktlinie',\n                date: fakeDate,\n                count: fakeCount,\n                icon: 'receipt',\n                text: `${faker.commerce.productName()} ${faker.datatype.number()}`\n            }\n            return alertData\n    }\n}\n\nexport const fakeData = {\n    logs: fakeLogs(2),\n    dataSources: fakeDatasources(15),\n    products: fakeProducts(15),\n    alerts: fakeAlerts(15)\n}\n"]}]}